From 89f6541a73aee3d43ef43a9af46ab2c7fb5d163c Mon Sep 17 00:00:00 2001
From: "Jason C. Leach" <jason.leach@fullboar.ca>
Date: Fri, 31 Jan 2025 13:54:39 -0800
Subject: [PATCH] feat: enable send video demo features

Signed-off-by: Jason C. Leach <jason.leach@fullboar.ca>
---
 .../legacy/core/App/localization/index.ts     |  9 +--
 .../send-video/screens/VideoInstructions.tsx  |  2 +-
 .../legacy/core/App/navigators/RootStack.tsx  |  8 +++
 packages/legacy/core/App/screens/Home.tsx     | 59 +++++++++++--------
 packages/legacy/core/App/types/navigators.ts  |  1 +
 5 files changed, 51 insertions(+), 28 deletions(-)

diff --git a/packages/legacy/core/App/localization/index.ts b/packages/legacy/core/App/localization/index.ts
index 7b557c35..0de6feb4 100644
--- a/packages/legacy/core/App/localization/index.ts
+++ b/packages/legacy/core/App/localization/index.ts
@@ -3,12 +3,13 @@ import { initReactI18next } from 'react-i18next'
 import * as RNLocalize from 'react-native-localize'
 import { PersistentStorage } from '../services/storage'
 import { LocalStorageKeys } from '../constants'
+import { en as sendVideoEn, fr as sendVideoFr, ptBr as sendVideoPtBr } from '../modules/send-video/localization'
 
 import en from './en'
 import fr from './fr'
 import ptBr from './pt-br'
 
-export type Translation = typeof en
+export type Translation = typeof en & typeof sendVideoEn
 
 export type TranslationResources = {
   [key: string]: any
@@ -16,13 +17,13 @@ export type TranslationResources = {
 
 export const translationResources: TranslationResources = {
   en: {
-    translation: en,
+    translation: { ...en, ...sendVideoEn },
   },
   fr: {
-    translation: fr,
+    translation: { ...fr, ...sendVideoFr },
   },
   'pt-BR': {
-    translation: ptBr,
+    translation: { ...ptBr, ...sendVideoPtBr },
   },
 }
 
diff --git a/packages/legacy/core/App/modules/send-video/screens/VideoInstructions.tsx b/packages/legacy/core/App/modules/send-video/screens/VideoInstructions.tsx
index 562ba337..43b2ebea 100644
--- a/packages/legacy/core/App/modules/send-video/screens/VideoInstructions.tsx
+++ b/packages/legacy/core/App/modules/send-video/screens/VideoInstructions.tsx
@@ -21,7 +21,7 @@ import { useAgent } from '@credo-ts/react-hooks'
 type VideoInstructionsProps = StackScreenProps<SendVideoStackParams, Screens.VideoInstructions>
 
 const sendVideoSvs = new SentVideoServices({
-  sendVideoAgentInvitation: Config.VIDEO_VERIFIER_AGENT_INVITATION,
+  sendVideoAgentInvitation: Config.VIDEO_VERIFIER_AGENT_INVITATION ?? '',
   sendVideoAPIBaseUrl: Config.VIDEO_VERIFIER_HOST ?? '',
 })
 
diff --git a/packages/legacy/core/App/navigators/RootStack.tsx b/packages/legacy/core/App/navigators/RootStack.tsx
index fde524e6..98aea619 100644
--- a/packages/legacy/core/App/navigators/RootStack.tsx
+++ b/packages/legacy/core/App/navigators/RootStack.tsx
@@ -13,6 +13,7 @@ import { useStore } from '../contexts/store'
 import { useTheme } from '../contexts/theme'
 import { useDeepLinks } from '../hooks/deep-links'
 import HistoryStack from '../modules/history/navigators/HistoryStack'
+import SendVideoStack from '../modules/send-video/navigators/SendVideoStack'
 import Chat from '../screens/Chat'
 import { BifoldError } from '../types/error'
 import { Screens, Stacks, TabStacks } from '../types/navigators'
@@ -143,6 +144,13 @@ const RootStack: React.FC = () => {
             cardStyleInterpolator: forFade,
           }}
         />
+        <Stack.Screen
+          name={Stacks.SendVideoStack}
+          component={SendVideoStack}
+          options={{
+            cardStyleInterpolator: forFade,
+          }}
+        />
         {CustomNavStack1 ? <Stack.Screen name={Stacks.CustomNavStack1} component={CustomNavStack1} /> : null}
       </Stack.Navigator>
     )
diff --git a/packages/legacy/core/App/screens/Home.tsx b/packages/legacy/core/App/screens/Home.tsx
index ad946ed3..90398a3c 100644
--- a/packages/legacy/core/App/screens/Home.tsx
+++ b/packages/legacy/core/App/screens/Home.tsx
@@ -11,8 +11,10 @@ import { DispatchAction } from '../contexts/reducers/store'
 import { useStore } from '../contexts/store'
 import { useTheme } from '../contexts/theme'
 import { useTour } from '../contexts/tour/tour-context'
-import { HomeStackParams, Screens } from '../types/navigators'
+import { HomeStackParams, Screens, Stacks } from '../types/navigators'
 import { TourID } from '../types/tour'
+import Button, { ButtonType } from '../components/buttons/Button'
+import { useNavigation } from '@react-navigation/native'
 
 type HomeProps = StackScreenProps<HomeStackParams, Screens.Home>
 
@@ -39,6 +41,7 @@ const Home: React.FC<HomeProps> = () => {
   const { start, stop } = useTour()
   const [showTourPopup, setShowTourPopup] = useState(false)
   const screenIsFocused = useIsFocused()
+  const navigation = useNavigation()
 
   const styles = StyleSheet.create({
     flatlist: {
@@ -46,29 +49,32 @@ const Home: React.FC<HomeProps> = () => {
     },
   })
 
-  const DisplayListItemType = useCallback((item: any): React.ReactNode => {
-    let component: React.ReactNode
-    if (item.type === 'BasicMessageRecord') {
-      component = <NotificationListItem notificationType={NotificationType.BasicMessage} notification={item} />
-    } else if (item.type === 'CredentialRecord') {
-      let notificationType = NotificationType.CredentialOffer
-      if (item.revocationNotification) {
-        notificationType = NotificationType.Revocation
+  const DisplayListItemType = useCallback(
+    (item: any): React.ReactNode => {
+      let component: React.ReactNode
+      if (item.type === 'BasicMessageRecord') {
+        component = <NotificationListItem notificationType={NotificationType.BasicMessage} notification={item} />
+      } else if (item.type === 'CredentialRecord') {
+        let notificationType = NotificationType.CredentialOffer
+        if (item.revocationNotification) {
+          notificationType = NotificationType.Revocation
+        }
+        component = <NotificationListItem notificationType={notificationType} notification={item} />
+      } else if (item.type === 'CustomNotification' && customNotification) {
+        component = (
+          <NotificationListItem
+            notificationType={NotificationType.Custom}
+            notification={item}
+            customNotification={customNotification}
+          />
+        )
+      } else {
+        component = <NotificationListItem notificationType={NotificationType.ProofRequest} notification={item} />
       }
-      component = <NotificationListItem notificationType={notificationType} notification={item} />
-    } else if (item.type === 'CustomNotification' && customNotification) {
-      component = (
-        <NotificationListItem
-          notificationType={NotificationType.Custom}
-          notification={item}
-          customNotification={customNotification}
-        />
-      )
-    } else {
-      component = <NotificationListItem notificationType={NotificationType.ProofRequest} notification={item} />
-    }
-    return component
-  }, [customNotification, NotificationListItem])
+      return component
+    },
+    [customNotification, NotificationListItem]
+  )
 
   useEffect(() => {
     const shouldShowTour = enableToursConfig && store.tours.enableTours && !store.tours.seenHomeTour
@@ -163,6 +169,13 @@ const Home: React.FC<HomeProps> = () => {
           onDismissPressed={onDismissPressed}
         />
       )}
+      <View style={{ marginBottom: 100 }}>
+        <Button
+          title={'Verify by Video (DEMO)'}
+          onPress={() => navigation.getParent()?.navigate(Stacks.SendVideoStack, { screen: 'Instructions' })}
+          buttonType={ButtonType.Primary}
+        />
+      </View>
     </>
   )
 }
diff --git a/packages/legacy/core/App/types/navigators.ts b/packages/legacy/core/App/types/navigators.ts
index cbdcc160..c52d2f9c 100644
--- a/packages/legacy/core/App/types/navigators.ts
+++ b/packages/legacy/core/App/types/navigators.ts
@@ -65,6 +65,7 @@ export enum Stacks {
   ConnectionStack = 'Connection Stack',
   HistoryStack = 'History Stack',
   CustomNavStack1 = 'Custom Nav Stack 1',
+  SendVideoStack = 'Send Video Stack',
 }
 
 export enum TabStacks {
-- 
2.48.1

